version: '3.3'

services:

  mongo:
    image: ${MONGO_IMAGE}:${MONGO_VERSION}
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      back_net:
        aliases:
          - post_db
          - mongodb
          - comment_db

  ui:
    image: ${DOCKERHUB_USERNAME}/ui:${UI_VERSION}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      resources:
        limits:
          cpus: '0.25'
          memory: 150M      
      mode: replicated
      replicas: 2
      update_config:
        delay: 5s
        parallelism: 1
        failure_action: rollback
      placement:
        constraints:
          - node.role == worker
    ports:
      - ${UI_PORT}:${UI_EXPOSE_PORT}/tcp
    networks:
      - front_net

  post:
    image: ${DOCKERHUB_USERNAME}/post:${POST_VERSION}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 12
        delay: 1s
      resources:
        limits:
          cpus: '0.3'
          memory: 300M 
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
    networks:
      - back_net
      - front_net

  comment:
    image: ${DOCKERHUB_USERNAME}/comment:${COMMENT_VERSION}
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 12
        delay: 1s
      resources:
        limits:
          cpus: '0.3'
          memory: 300M  
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      update_config:
        delay: 10s
        parallelism: 2
        failure_action: rollback
    networks:
      - back_net
      - front_net

volumes:
  post_db:

networks:
  front_net:
    ipam:
      config:
        - subnet: 10.0.1.0/24
  back_net:
    ipam:
      config:
        - subnet: 10.0.2.0/24

