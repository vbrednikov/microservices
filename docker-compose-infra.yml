version: '3.3'

services:

  prometheus:
    image: ${DOCKERHUB_USERNAME}/prometheus:${PROMETHEUS_VERSION}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      placement:
        constraints:
          - node.role == manager
    ports:
      - 9090:${PROMETHEUS_EXPOSE_PORT}/tcp
    networks:
      - back_net
      - front_net

  node-exporter:
    image: prom/node-exporter:v0.15.0
    user: root
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 2s
      resources:
        limits:
          cpus: '0.2'
          memory: 150M
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - back_net
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'

  mongodb-exporter:
    image: ${DOCKERHUB_USERNAME}/mongodb-exporter:latest
    environment:
      MONGODB_URL: mongodb
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 3s
      resources:
        limits:
          cpus: '0.2'
          memory: 150M
    networks:
      - back_net

  cadvisor:
    image: google/cadvisor:latest
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 3s
      resources:
        limits:
          cpus: '0.2'
          memory: 200M
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - back_net

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    ports:
      - 3000:${GRAFANA_PORT}
    networks:
      - back_net
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 3s
      resources:
        limits:
          cpus: '0.3'
          memory: 250M

  alertmanager:
    image: ${DOCKERHUB_USERNAME}/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 3s
      resources:
        limits:
          cpus: '0.3'
          memory: 250M
    command:
      - '-config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:${ALERTMANAGER_PORT}
    networks:
      - back_net

  stackdriver_exporter:
    image: ${DOCKERHUB_USERNAME}/stackdriver_exporter:1.0
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 3s
      resources:
        limits:
          cpus: '0.3'
          memory: 250M
    ports:
      - 9255:${STACKDRIVER_EXPORTER_PORT}
    networks:
      - back_net
    environment:
      - STACKDRIVER_EXPORTER_GOOGLE_PROJECT_ID=${STACKDRIVER_EXPORTER_GOOGLE_PROJECT_ID}
      - STACKDRIVER_EXPORTER_MONITORING_METRICS_TYPE_PREFIXES=${STACKDRIVER_EXPORTER_MONITORING_METRICS_TYPE_PREFIXES}
      - GOOGLE_APPLICATION_CREDENTIALS=/stackdriver.json

volumes:
  grafana_data:
